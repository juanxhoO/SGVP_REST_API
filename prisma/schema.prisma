// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  lastname        String?
  phone           String?
  idCard          String?
  password        String
  id_card         String
  birthday        DateTime
  bloodType       String?
  vehicle         Vehicle[]
  role            Role     @default(USER)
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]
}

model Range {
  id    String @id @default(uuid())
  range String
}

model Vehicle {
  id             String        @id @default(uuid())
  name           String
  images         String
  chasis         String
  model          String
  plate          String
  engine_cc      Int
  engine_type    String
  charge_capacity Int
  occupants      Int
  mileage        Int
  type           VehicleType[]
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

}

model Reportes {
  id   String @id @default(uuid())
  name String
  type String
}

model Informe {
  id   String @id @default(uuid())
  name String
  type String
}

model Mecanica {
  id   String @id @default(uuid())
  name String
  type String
}

model Circuito {
  id   String @id @default(uuid())
  name String
  type String
}

model Subcircuito {
  id   String @id @default(uuid())
  name String
  type String
}

model Provincia {
  id   String @id @default(uuid())
  name String
  type String
}

model Ordenes {
  id   String @id @default(uuid())
  name String
  type String
}

model Repuesto {
  id   String @id @default(uuid())
  name String
  type String
}

model Manteniminto {
  id   String @id @default(uuid())
  name String
  type String
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

enum Role {
  USER
  MECHANIC
  TECHNIC1
  TECHNIC2
  ADMIN
}

enum VehicleType {
  BIKE
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
